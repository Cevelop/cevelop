//!StrcmpFirstArg
//@main.cpp
#include <cstring>
#include <iostream>
int main()  {
	const char* a = "Apple";
	const char* b = "Banana";
	std::string c = "Orange";
	std::cout << strcmp(a,b);
	std::cout << strcmp(a,c.c_str());
}
//=
#include <cstring>
#include <iostream>
#include <string>
int main()  {
	std::string a = "Apple";
	const char* b = "Banana";
	std::string c = "Orange";
	std::cout << a.compare(b);
	std::cout << a.compare(c);
}


//!WcscmpFirstArg
//@main.cpp
#include <cstring>
#include <iostream>
int main()  {
	const wchar_t* a = L"Apple";
	const wchar_t* b = L"Banana";
	std::wstring c = L"Orange";
	std::cout << wcscmp(a,b);
	std::cout << wcscmp(a,c.c_str());
}
//=
#include <cstring>
#include <iostream>
#include <string>
int main()  {
	std::wstring a = L"Apple";
	const wchar_t* b = L"Banana";
	std::wstring c = L"Orange";
	std::cout << a.compare(b);
	std::cout << a.compare(c);
}


//!StrcmpFirstArgWithOffset
//@main.cpp
#include <cstring>
int main() {
	const char *filename = "myfile.doc";
	if (strcmp(filename + strlen(filename) - 3, "doc") == 0) {
		std::cout << "this is a word document" << std::endl;
	}
}
//=
#include <cstring>
#include <string>

int main() {
	std::string filename = "myfile.doc";
	if (filename.compare(filename.size() - 3, std::string::npos, "doc") == 0) {
		std::cout << "this is a word document" << std::endl;
	}
}


//!WcscmpFirstArgWithOffset
//@main.cpp
#include <cstring>
int main() {
	const wchar_t* filename = L"myfile.doc";
	if (wcscmp(filename + wcslen(filename) - 3, L"doc") == 0) {
		std::cout << "this is a word document" << std::endl;
	}
}
//=
#include <cstring>
#include <string>

int main() {
	std::wstring filename = L"myfile.doc";
	if (filename.compare(filename.size() - 3, std::wstring::npos, L"doc")
			== 0) {
		std::cout << "this is a word document" << std::endl;
	}
}


//!StrcmpModifiedPointer
//@main.cpp
#include <cstring>
int main() {
	const char *str = "hello";
	str++;
	int i = strcmp(str, "ello");
	int j = strcmp(str+2, "lo");
}
//=
#include <cstring>
#include <string>
int main() {
	std::string str = "hello";
	std::string::size_type str_pos = 0;
	str_pos++;
	int i = str.compare(str_pos, std::string::npos, "ello");
	int j = str.compare(str_pos + 2, std::string::npos, "lo");
}


//!WcscmpModifiedPointer
//@main.cpp
#include <cstring>
int main() {
	const wchar_t* wstr = L"hello";
	wstr++;
	int i = wcscmp(wstr, L"ello");
}
//=
#include <cstring>
#include <string>
int main() {
	std::wstring wstr = L"hello";
	std::wstring::size_type wstr_pos = 0;
	wstr_pos++;
	int i = wstr.compare(wstr_pos, std::wstring::npos, L"ello");
}


//!StrcmpFirstArgStringEqualityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hello";
	
	if(!strcmp(str1, str2)) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while(!strcmp(str1, str2)) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for(; !strcmp(str1, str2);) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = !strcmp(str1, str2) ? true : false;
	bool equal2 = !strcmp(str1, str2);
	equal2 = !strcmp(str1, str2);
	bool equal3 = !strcmp(str1, str2) || true;
	bool equal4 = !strcmp(str1, str2) && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while(!strcmp(str1, str2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hello";
	
	if (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for (; str1 == str2;) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = str1 == str2 ? true : false;
	bool equal2 = str1 == str2;
	equal2 = str1 == str2;
	bool equal3 = str1 == str2 || true;
	bool equal4 = str1 == str2 && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while (str1 == str2);
}


//!WcscmpFirstArgStringEqualityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const wchar_t *wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hello";
	
	if(!wcscmp(wstr1, wstr2)) {
		std::cout << "equal";
	}
	while(!wcscmp(wstr1, wstr2)) {
		std::cout << "equal";
	}
	for(; !wcscmp(wstr1, wstr2);) {
		std::cout << "equal";
	}
	bool equal1 = !wcscmp(wstr1, wstr2) ? true : false;
	bool equal2 = !wcscmp(wstr1, wstr2);
	equal2 = !wcscmp(wstr1, wstr2);
	bool equal3 = !wcscmp(wstr1, wstr2) || true;
	bool equal4 = !wcscmp(wstr1, wstr2) && true;
	do {
		std::cout << "equal";
	} while(!wcscmp(wstr1, wstr2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::wstring wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hello";
	
	if (wstr1 == wstr2) {
		std::cout << "equal";
	}
	while (wstr1 == wstr2) {
		std::cout << "equal";
	}
	for (; wstr1 == wstr2;) {
		std::cout << "equal";
	}
	bool equal1 = wstr1 == wstr2 ? true : false;
	bool equal2 = wstr1 == wstr2;
	equal2 = wstr1 == wstr2;
	bool equal3 = wstr1 == wstr2 || true;
	bool equal4 = wstr1 == wstr2 && true;
	do {
		std::cout << "equal";
	} while (wstr1 == wstr2);
}


//!StrcmpSecondArgStringEqualityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(!strcmp("Hello", str)) {
		std::cout << str << " = Hello" << std::endl;
	}
	while(!strcmp("Hello", str)) {
		std::cout << str << " = Hello" << std::endl;
	}
	for(; !strcmp("Hello", str);) {
		std::cout << str << " = Hello" << std::endl;
	}
	bool equal1 = !strcmp("Hello", str) ? true : false;
	bool equal2 = !strcmp("Hello", str);
	equal2 = !strcmp("Hello", str);
	bool equal3 = !strcmp("Hello", str) || true;
	bool equal4 = !strcmp("Hello", str) && true;
	do {
		std::cout << str << " = Hello" << std::endl;
	} while(!strcmp("Hello", str));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str == "Hello") {
		std::cout << str << " = Hello" << std::endl;
	}
	while (str == "Hello") {
		std::cout << str << " = Hello" << std::endl;
	}
	for (; str == "Hello";) {
		std::cout << str << " = Hello" << std::endl;
	}
	bool equal1 = str == "Hello" ? true : false;
	bool equal2 = str == "Hello";
	equal2 = str == "Hello";
	bool equal3 = str == "Hello" || true;
	bool equal4 = str == "Hello" && true;
	do {
		std::cout << str << " = Hello" << std::endl;
	} while (str == "Hello");
}


//!WcscmpSecondArgStringEqualityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const wchar_t *wstr = L"Hello";
	
	if(!wcscmp(L"Hello", wstr)) {
		std::cout << "equal";
	}
	while(!wcscmp(L"Hello", wstr)) {
		std::cout << "equal";
	}
	for(; !wcscmp(L"Hello", wstr);) {
		std::cout << "equal";
	}
	bool equal1 = !wcscmp(L"Hello", wstr) ? true : false;
	bool equal2 = !wcscmp(L"Hello", wstr);
	equal2 = !wcscmp(L"Hello", wstr);
	bool equal3 = !wcscmp(L"Hello", wstr) || true;
	bool equal4 = !wcscmp(L"Hello", wstr) && true;
	do {
		std::cout << "equal";
	} while(!wcscmp(L"Hello", wstr));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::wstring wstr = L"Hello";
	if (wstr == L"Hello") {
		std::cout << "equal";
	}
	while (wstr == L"Hello") {
		std::cout << "equal";
	}
	for (; wstr == L"Hello";) {
		std::cout << "equal";
	}
	bool equal1 = wstr == L"Hello" ? true : false;
	bool equal2 = wstr == L"Hello";
	equal2 = wstr == L"Hello";
	bool equal3 = wstr == L"Hello" || true;
	bool equal4 = wstr == L"Hello" && true;
	do {
		std::cout << "equal";
	} while (wstr == L"Hello");
}


//!StrcmpFirstArgStringEqualityCheck2
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hello";
	
	if(strcmp(str1, str2) == 0) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while(strcmp(str1, str2) == 0) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for(; strcmp(str1, str2) == 0;) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = strcmp(str1, str2) == 0 ? true : false;
	bool equal2 = strcmp(str1, str2) == 0;
	equal2 = strcmp(str1, str2) == 0;
	bool equal3 = strcmp(str1, str2) == 0 || true;
	bool equal4 = strcmp(str1, str2) == 0 && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while(strcmp(str1, str2) == 0);
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hello";
	
	if (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for (; str1 == str2;) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = str1 == str2 ? true : false;
	bool equal2 = str1 == str2;
	equal2 = str1 == str2;
	bool equal3 = str1 == str2 || true;
	bool equal4 = str1 == str2 && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while (str1 == str2);
}


//!WcscmpFirstArgStringEqualityCheck2
//@main.cpp
#include <cstring>
int main()  {
	const wchar_t *wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hello";
	
	if(wcscmp(wstr1, wstr2) == 0) {
		std::cout << "equal";
	}
	while(wcscmp(wstr1, wstr2) == 0) {
		std::cout << "equal";
	}
	for(; wcscmp(wstr1, wstr2) == 0;) {
		std::cout << "equal";
	}
	bool equal1 = wcscmp(wstr1, wstr2) == 0 ? true : false;
	bool equal2 = wcscmp(wstr1, wstr2) == 0;
	equal2 = wcscmp(wstr1, wstr2) == 0;
	bool equal3 = wcscmp(wstr1, wstr2) == 0 || true;
	bool equal4 = wcscmp(wstr1, wstr2) == 0 && true;
	do {
		std::cout << "equal";
	} while(wcscmp(wstr1, wstr2) == 0);
}
//=
#include <cstring>
#include <string>
int main()  {
	std::wstring wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hello";
	
	if (wstr1 == wstr2) {
		std::cout << "equal";
	}
	while (wstr1 == wstr2) {
		std::cout << "equal";
	}
	for (; wstr1 == wstr2;) {
		std::cout << "equal";
	}
	bool equal1 = wstr1 == wstr2 ? true : false;
	bool equal2 = wstr1 == wstr2;
	equal2 = wstr1 == wstr2;
	bool equal3 = wstr1 == wstr2 || true;
	bool equal4 = wstr1 == wstr2 && true;
	do {
		std::cout << "equal";
	} while (wstr1 == wstr2);
}


//!StrcmpSecondArgStringEqualityCheck2
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(strcmp("Hello", str) == 0) {
		std::cout << str << " = Hello" << std::endl;
	}
	while(strcmp("Hello", str) == 0) {
		std::cout << str << " = Hello" << std::endl;
	}
	for(; strcmp("Hello", str) == 0;) {
		std::cout << str << " = Hello" << std::endl;
	}
	bool equal1 = strcmp("Hello", str) == 0 ? true : false;
	bool equal2 = strcmp("Hello", str) == 0;
	equal2 = strcmp("Hello", str) == 0;
	bool equal3 = strcmp("Hello", str) == 0 || true;
	bool equal4 = strcmp("Hello", str) == 0 && true;
	do {
		std::cout << str << " = Hello" << std::endl;
	} while(strcmp("Hello", str) == 0);
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str == "Hello") {
		std::cout << str << " = Hello" << std::endl;
	}
	while (str == "Hello") {
		std::cout << str << " = Hello" << std::endl;
	}
	for (; str == "Hello";) {
		std::cout << str << " = Hello" << std::endl;
	}
	bool equal1 = str == "Hello" ? true : false;
	bool equal2 = str == "Hello";
	equal2 = str == "Hello";
	bool equal3 = str == "Hello" || true;
	bool equal4 = str == "Hello" && true;
	do {
		std::cout << str << " = Hello" << std::endl;
	} while (str == "Hello");
}


//!StrcmpFirstArgStringEqualityCheck3
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hello";
	
	if(0 == strcmp(str1, str2)) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while(0 == strcmp(str1, str2)) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for(; 0 == strcmp(str1, str2);) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = 0 == strcmp(str1, str2) ? true : false;
	bool equal2 = 0 == strcmp(str1, str2);
	equal2 = 0 == strcmp(str1, str2);
	bool equal3 = 0 == strcmp(str1, str2) || true;
	bool equal4 = 0 == strcmp(str1, str2) && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while(0 == strcmp(str1, str2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hello";
	
	if (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	while (str1 == str2) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	for (; str1 == str2;) {
		std::cout << str1 << " = " << str2 << std::endl;
	}
	bool equal1 = str1 == str2 ? true : false;
	bool equal2 = str1 == str2;
	equal2 = str1 == str2;
	bool equal3 = str1 == str2 || true;
	bool equal4 = str1 == str2 && true;
	do {
		std::cout << str1 << " = " << str2 << std::endl;
	} while (str1 == str2);
}


//!StrcmpSecondArgStringEqualityCheck3
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(0 == strcmp("Hello", str)) {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	while(0 == strcmp("Hello", str)) {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	for(; 0 == strcmp("Hello", str);) {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	bool equal1 = 0 == strcmp("Hello", str) ? true : false;
	bool equal2 = 0 == strcmp("Hello", str);
	equal2 = 0 == strcmp("Hello", str);
	bool equal3 = 0 == strcmp("Hello", str) || true;
	bool equal4 = 0 == strcmp("Hello", str) && true;
	do {
		std::cout << str << " = " << "Hello" << std::endl;
	} while(0 == strcmp("Hello", str));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str == "Hello") {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	while (str == "Hello") {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	for (; str == "Hello";) {
		std::cout << str << " = " << "Hello" << std::endl;
	}
	bool equal1 = str == "Hello" ? true : false;
	bool equal2 = str == "Hello";
	equal2 = str == "Hello";
	bool equal3 = str == "Hello" || true;
	bool equal4 = str == "Hello" && true;
	do {
		std::cout << str << " = " << "Hello" << std::endl;
	} while (str == "Hello");
}


//!StrcmpFirstArgStringInequalityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hallo";
	
	if(strcmp(str1, str2)) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while(strcmp(str1, str2)) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for(; strcmp(str1, str2);) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	int result = strcmp(str1, str2);
	result = strcmp(str1, str2);
	bool not_equal1 = strcmp(str1, str2) ? true : false;
	bool not_equal2 = strcmp(str1, str2);
	not_equal2 = strcmp(str1, str2);
	bool not_equal3 = strcmp(str1, str2) || true;
	bool not_equal4 = strcmp(str1, str2) && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while(strcmp(str1, str2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hallo";
	
	if (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for (; str1 != str2;) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	int result = str1.compare(str2);
	result = str1.compare(str2);
	bool not_equal1 = str1 != str2 ? true : false;
	bool not_equal2 = str1 != str2;
	not_equal2 = str1 != str2;
	bool not_equal3 = str1 != str2 || true;
	bool not_equal4 = str1 != str2 && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while (str1 != str2);
}


//!WcscmpFirstArgStringInequalityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const wchar_t *wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hallo";
	
	if(wcscmp(wstr1, wstr2)) {
		std::cout << "not equal" << std::endl;
	}
	while(wcscmp(wstr1, wstr2)) {
		std::cout << "not equal" << std::endl;
	}
	for(; wcscmp(wstr1, wstr2);) {
		std::cout << "not equal" << std::endl;
	}
	int result = wcscmp(wstr1, wstr2);
	result = wcscmp(wstr1, wstr2);
	bool not_equal1 = wcscmp(wstr1, wstr2) ? true : false;
	bool not_equal2 = wcscmp(wstr1, wstr2);
	not_equal2 = wcscmp(wstr1, wstr2);
	bool not_equal3 = wcscmp(wstr1, wstr2) || true;
	bool not_equal4 = wcscmp(wstr1, wstr2) && true;
	do {
		std::cout << "not equal" << std::endl;
	} while(wcscmp(wstr1, wstr2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::wstring wstr1 = L"Hello";
	const wchar_t *wstr2 = L"Hallo";
	
	if (wstr1 != wstr2) {
		std::cout << "not equal" << std::endl;
	}
	while (wstr1 != wstr2) {
		std::cout << "not equal" << std::endl;
	}
	for (; wstr1 != wstr2;) {
		std::cout << "not equal" << std::endl;
	}
	int result = wstr1.compare(wstr2);
	result = wstr1.compare(wstr2);
	bool not_equal1 = wstr1 != wstr2 ? true : false;
	bool not_equal2 = wstr1 != wstr2;
	not_equal2 = wstr1 != wstr2;
	bool not_equal3 = wstr1 != wstr2 || true;
	bool not_equal4 = wstr1 != wstr2 && true;
	do {
		std::cout << "not equal" << std::endl;
	} while (wstr1 != wstr2);
}


//!StrcmpSecondArgStringInequalityCheck1
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(strcmp("Hello", str)) {
		std::cout << str << " != Hello" << std::endl;
	}
	while(strcmp("Hello", str)) {
		std::cout << str << " != Hello" << std::endl;
	}
	for(; strcmp("Hello", str);) {
		std::cout << str << " != Hello" << std::endl;
	}
	int result = strcmp("Hello", str);
	result = strcmp("Hello", str);
	bool not_equal1 = strcmp("Hello", str) ? true : false;
	bool not_equal2 = strcmp("Hello", str);
	not_equal2 = strcmp("Hello", str);
	bool not_equal3 = strcmp("Hello", str) || true;
	bool not_equal4 = strcmp("Hello", str) && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while(strcmp("Hello", str));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	while (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	for (; str != "Hello";) {
		std::cout << str << " != Hello" << std::endl;
	}
	int result = strcmp("Hello", str.c_str());
	result = strcmp("Hello", str.c_str());
	bool not_equal1 = str != "Hello" ? true : false;
	bool not_equal2 = str != "Hello";
	not_equal2 = str != "Hello";
	bool not_equal3 = str != "Hello" || true;
	bool not_equal4 = str != "Hello" && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while (str != "Hello");
}


//!StrcmpFirstArgStringInequalityCheck2
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hallo";
	
	if(strcmp(str1, str2) != 0) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while(strcmp(str1, str2) != 0) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for(; strcmp(str1, str2) != 0;) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	bool not_equal1 = strcmp(str1, str2) != 0 ? true : false;
	bool not_equal2 = strcmp(str1, str2) != 0;
	not_equal2 = strcmp(str1, str2) != 0;
	bool not_equal3 = strcmp(str1, str2) != 0 || true;
	bool not_equal4 = strcmp(str1, str2) != 0 && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while(strcmp(str1, str2) != 0);
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hallo";
	
	if (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for (; str1 != str2;) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	bool not_equal1 = str1 != str2 ? true : false;
	bool not_equal2 = str1 != str2;
	not_equal2 = str1 != str2;
	bool not_equal3 = str1 != str2 || true;
	bool not_equal4 = str1 != str2 && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while (str1 != str2);
}


//!StrcmpSecondArgStringInequalityCheck2
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(strcmp("Hello", str) != 0) {
		std::cout << str << " != Hello" << std::endl;
	}
	while(strcmp("Hello", str) != 0) {
		std::cout << str << " != Hello" << std::endl;
	}
	for(; strcmp("Hello", str) != 0;) {
		std::cout << str << " != Hello" << std::endl;
	}
	bool not_equal1 = strcmp("Hello", str) != 0 ? true : false;
	bool not_equal2 = strcmp("Hello", str) != 0;
	not_equal2 = strcmp("Hello", str) != 0;
	bool not_equal3 = strcmp("Hello", str) != 0 || true;
	bool not_equal4 = strcmp("Hello", str) != 0 && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while(strcmp("Hello", str) != 0);
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	while (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	for (; str != "Hello";) {
		std::cout << str << " != Hello" << std::endl;
	}
	bool not_equal1 = str != "Hello" ? true : false;
	bool not_equal2 = str != "Hello";
	not_equal2 = str != "Hello";
	bool not_equal3 = str != "Hello" || true;
	bool not_equal4 = str != "Hello" && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while (str != "Hello");
}


//!StrcmpFirstArgStringInequalityCheck3
//@main.cpp
#include <cstring>
int main()  {
	const char *str1 = "Hello";
	const char *str2 = "Hallo";
	
	if(0 != strcmp(str1, str2)) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while(0 != strcmp(str1, str2)) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for(; 0 != strcmp(str1, str2);) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	bool not_equal1 = 0 != strcmp(str1, str2) ? true : false;
	bool not_equal2 = 0 != strcmp(str1, str2);
	not_equal2 = 0 != strcmp(str1, str2);
	bool not_equal3 = 0 != strcmp(str1, str2) || true;
	bool not_equal4 = 0 != strcmp(str1, str2) && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while(0 != strcmp(str1, str2));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str1 = "Hello";
	const char *str2 = "Hallo";
	
	if (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	while (str1 != str2) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	for (; str1 != str2;) {
		std::cout << str1 << " != " << str2 << std::endl;
	}
	bool not_equal1 = str1 != str2 ? true : false;
	bool not_equal2 = str1 != str2;
	not_equal2 = str1 != str2;
	bool not_equal3 = str1 != str2 || true;
	bool not_equal4 = str1 != str2 && true;
	do {
		std::cout << str1 << " != " << str2 << std::endl;
	} while (str1 != str2);
}


//!StrcmpSecondArgStringInequalityCheck3
//@main.cpp
#include <cstring>
int main()  {
	const char *str = "Hello";
	
	if(0 != strcmp("Hello", str)) {
		std::cout << str << " != Hello" << std::endl;
	}
	while(0 != strcmp("Hello", str)) {
		std::cout << str << " != Hello" << std::endl;
	}
	for(; 0 != strcmp("Hello", str);) {
		std::cout << str << " != Hello" << std::endl;
	}
	bool not_equal1 = 0 != strcmp("Hello", str) ? true : false;
	bool not_equal2 = 0 != strcmp("Hello", str);
	not_equal2 = 0 != strcmp("Hello", str);
	bool not_equal3 = 0 != strcmp("Hello", str) || true;
	bool not_equal4 = 0 != strcmp("Hello", str) && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while(0 != strcmp("Hello", str));
}
//=
#include <cstring>
#include <string>
int main()  {
	std::string str = "Hello";
	if (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	while (str != "Hello") {
		std::cout << str << " != Hello" << std::endl;
	}
	for (; str != "Hello";) {
		std::cout << str << " != Hello" << std::endl;
	}
	bool not_equal1 = str != "Hello" ? true : false;
	bool not_equal2 = str != "Hello";
	not_equal2 = str != "Hello";
	bool not_equal3 = str != "Hello" || true;
	bool not_equal4 = str != "Hello" && true;
	do {
		std::cout << str << " != Hello" << std::endl;
	} while (str != "Hello");
}


//!StrcmpSecondArg
//@main.cpp
#include <cstring>
#include <iostream>
int main()  {
	std::string a = "Apple";
	const char *b = "Banana";
	std::cout << strcmp(a.c_str(),b);
}
//=
#include <cstring>
#include <iostream>
#include <string>
int main()  {
	std::string a = "Apple";
	std::string b = "Banana";
	std::cout << strcmp(a.c_str(), b.c_str());
}


//!CompareArg
//@main.cpp
#include <cstring>
#include <iostream>
int main()  {
	std::string a = "Apple";
	const char *b = "Banana";
	std::cout << a.compare(b);
}
//=
#include <cstring>
#include <iostream>
#include <string>
int main()  {
	std::string a = "Apple";
	std::string b = "Banana";
	std::cout << a.compare(b);
}


//!StrcmpWithModifiedPointer
//@main.cpp
#include <cstring>
#include <iostream>
int main() {
	const char *str = "test";
	str++;
	std::cout << (strcmp(str, "est") == 0) << std::endl;
}
//=
#include <cstring>
#include <iostream>
#include <string>
int main() {
	std::string str = "test";
	std::string::size_type str_pos = 0;
	str_pos++;
	std::cout << (str.compare(str_pos, std::string::npos, "est") == 0)
			<< std::endl;
}
