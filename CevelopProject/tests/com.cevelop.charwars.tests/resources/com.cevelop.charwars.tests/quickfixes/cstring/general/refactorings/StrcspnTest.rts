//!StrcspnAssignedToVariable
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	size_t first_digit = strcspn(str, "0123456789");
	std::cout << first_digit << std::endl;
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	size_t first_digit = strcspn(str.c_str(), "0123456789");
	std::cout << first_digit << std::endl;
}


//!StrcspnComparedToStrlen
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strcspn(str, digits) == strlen(str)) {}
	if(strcspn(str, digits) != strlen(str)) {}
	if(strcspn(str, digits) < strlen(str)) {}
	if(strlen(str) == strcspn(str, digits)) {}
	if(strlen(str) != strcspn(str, digits)) {}
	if(strlen(str) > strcspn(str, digits)) {}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (str.find_first_of(digits) == std::string::npos) {
	}
	if (str.find_first_of(digits) != std::string::npos) {
	}
	if (str.find_first_of(digits) != std::string::npos) {
	}
	if (str.find_first_of(digits) == std::string::npos) {
	}
	if (str.find_first_of(digits) != std::string::npos) {
	}
	if (str.find_first_of(digits) != std::string::npos) {
	}
}


//!StrcspnComparedToStrlenWithUnsupportedOperator
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strcspn(str, digits) > strlen(str)) {}
	if(strcspn(str, digits) >= strlen(str)) {}
	if(strcspn(str, digits) <= strlen(str)) {}
	if(strlen(str) < strcspn(str, digits)) {}
	if(strlen(str) <= strcspn(str, digits)) {}
	if(strlen(str) >= strcspn(str, digits)) {}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (strcspn(str.c_str(), digits) > str.size()) {
	}
	if (strcspn(str.c_str(), digits) >= str.size()) {
	}
	if (strcspn(str.c_str(), digits) <= str.size()) {
	}
	if (str.size() < strcspn(str.c_str(), digits)) {
	}
	if (str.size() <= strcspn(str.c_str(), digits)) {
	}
	if (str.size() >= strcspn(str.c_str(), digits)) {
	}
}


//!StrcspnComparedToNumber
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strcspn(str, digits) == 5) {}
	while(strcspn(str, digits) == 5) {}
	bool x = strcspn(str, digits) == 5;
	if(strcspn(str, digits) != 5) {}
	while(strcspn(str, digits) != 5) {}
	bool x = strcspn(str, digits) != 5;
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (strcspn(str.c_str(), digits) == 5) {
	}
	while (strcspn(str.c_str(), digits) == 5) {
	}
	bool x = strcspn(str.c_str(), digits) == 5;
	if (strcspn(str.c_str(), digits) != 5) {
	}
	while (strcspn(str.c_str(), digits) != 5) {
	}
	bool x = strcspn(str.c_str(), digits) != 5;
}


//!StrcspnChecksWithOffset
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	const char *str = "http://www.google.com";
	const char *digits = "/:";
	if(strcspn(str+7, digits) == strlen(str)) {
		std::cout << str << std::endl;
	}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "http://www.google.com";
	const char *digits = "/:";
	if (str.find_first_of(digits, 7) == std::string::npos) {
		std::cout << str << std::endl;
	}
}


//!StrcspnChecksWithModifiedPointer
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	const char *str = "http://www.google.com";
	const char *digits = "/:";
	while(strcspn(str, digits) != strlen(str)) {
		str++;
	}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "http://www.google.com";
	const char *digits = "/:";
	std::string::size_type str_pos = 0;
	while (str.find_first_of(digits, str_pos) != std::string::npos) {
		str_pos++;
	}
}
