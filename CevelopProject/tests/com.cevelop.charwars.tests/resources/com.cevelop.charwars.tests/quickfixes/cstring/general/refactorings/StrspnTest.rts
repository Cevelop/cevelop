//!StrspnDefault
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	size_t first_non_letter = strspn(str, "abcdefghijklmnopqrstuvwxyz ");
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	size_t first_non_letter = strspn(str.c_str(),
			"abcdefghijklmnopqrstuvwxyz ");
}


//!StrspnComparedToStrlen
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strspn(str, digits) == strlen(str)) {}
	if(strspn(str, digits) != strlen(str)) {}
	if(strspn(str, digits) < strlen(str)) {}
	if(strlen(str) == strspn(str, digits)) {}
	if(strlen(str) != strspn(str, digits)) {}
	if(strlen(str) > strspn(str, digits)) {}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (str.find_first_not_of(digits) == std::string::npos) {
	}
	if (str.find_first_not_of(digits) != std::string::npos) {
	}
	if (str.find_first_not_of(digits) != std::string::npos) {
	}
	if (str.find_first_not_of(digits) == std::string::npos) {
	}
	if (str.find_first_not_of(digits) != std::string::npos) {
	}
	if (str.find_first_not_of(digits) != std::string::npos) {
	}
}


//!StrspnComparedToStrlenWithUnsupportedOperator
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strspn(str, digits) > strlen(str)) {}
	if(strspn(str, digits) >= strlen(str)) {}
	if(strspn(str, digits) <= strlen(str)) {}
	if(strlen(str) < strspn(str, digits)) {}
	if(strlen(str) <= strspn(str, digits)) {}
	if(strlen(str) >= strspn(str, digits)) {}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (strspn(str.c_str(), digits) > str.size()) {
	}
	if (strspn(str.c_str(), digits) >= str.size()) {
	}
	if (strspn(str.c_str(), digits) <= str.size()) {
	}
	if (str.size() < strspn(str.c_str(), digits)) {
	}
	if (str.size() <= strspn(str.c_str(), digits)) {
	}
	if (str.size() >= strspn(str.c_str(), digits)) {
	}
}


//!StrspnComparedToNumber
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	char str[] = "this is a string";
	const char *digits = "0123456789";
	if(strspn(str, digits) == 5) {}
	while(strspn(str, digits) == 5) {}
	bool x = strspn(str, digits) == 5;
	if(strspn(str, digits) != 5) {}
	while(strspn(str, digits) != 5) {}
	bool x = strspn(str, digits) != 5;
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "this is a string";
	const char *digits = "0123456789";
	if (strspn(str.c_str(), digits) == 5) {
	}
	while (strspn(str.c_str(), digits) == 5) {
	}
	bool x = strspn(str.c_str(), digits) == 5;
	if (strspn(str.c_str(), digits) != 5) {
	}
	while (strspn(str.c_str(), digits) != 5) {
	}
	bool x = strspn(str.c_str(), digits) != 5;
}


//!StrspnChecksWithOffset
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	const char *str = "http://www.google.com";
	const char *http = "http:/";
	if(strspn(str+7, http) == strlen(str)) {
		std::cout << str << std::endl;
	}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "http://www.google.com";
	const char *http = "http:/";
	if (str.find_first_not_of(http, 7) == std::string::npos) {
		std::cout << str << std::endl;
	}
}


//!StrspnChecksWithModifiedPointer
//@main.cpp
#include <cstring>
#include <iostream>

int main() {
	const char *str = "http://www.google.com";
	const char *alphabet = "abcdefghijklmnopqrstuvwxyz";
	while(strspn(str, alphabet) != strlen(str)) {
		str++;
	}
}
//=
#include <cstring>
#include <iostream>
#include <string>

int main() {
	std::string str = "http://www.google.com";
	const char *alphabet = "abcdefghijklmnopqrstuvwxyz";
	std::string::size_type str_pos = 0;
	while (str.find_first_not_of(alphabet, str_pos) != std::string::npos) {
		str_pos++;
	}
}