//! Exception caught by reference
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
	catch (std::runtime_error& e) {}
}

//! Exception caught by const reference
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
    catch (const std::logic_error& e) {}
}

//! Exception caught by pointer
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=11
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
    catch (std::runtime_error* e){}
}

//! Exception caught by const pointer
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=11
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
	catch (const std::runtime_error* e){}
}

//! Exception caught by value
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=11
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
    catch (std::runtime_error e) {}
}

//! Exception caught by value const
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=11
//@main.h
#include <stdexcept>
class Exception: public std::runtime_error {
public:
	using std::runtime_error::runtime_error;
	const char*what() const noexcept(true)override {
		return "Exception error message";
	}
};
void Fn() {
	try {}
    catch (const std::runtime_error e) {}
}

//! Primitive caught by value
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (int e){}
}

//! Primitive caught by value const
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (const int e){}
}

//! Primitive caught by reference
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (int & e){}
}

//! Primitive caught by reference const
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (const int & e){}
}

//! Primitive caught by pointer
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (int* e){}
}

//! Primitive caught by pointer const
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void Fn() {
	try {}
    catch (const int * e){}
}