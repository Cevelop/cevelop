//! Ternary operator used as sub-expression
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i = 10 + (x >= 0 ? x : 0);
}

//! Nested ternary operator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i = (x == 0 ? 0 : (x > 0 ? x : -x));
}

//! Ternary operator used standalone
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i = (x >= 0 ? x : 0);
}

//! Nested ternary operator without parenthesis
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i = x == 0 ? 0 : x > 0 ? x : -x;
}

//! Ternary operator used without parenthesis
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i = x >= 0 ? x : 0;
}

//! Ternary operator used in assignment expression
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i {};
	i = x >= 0 ? x : 0;
}

//! Ternary operator used in assignment expression as sub-expression
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=5
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	std::int32_t i {};
	i = 10 + (x >= 0 ? x : 0);
}

//! Suppressed ternary operator used as sub-expression
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F(std::int32_t x)
{
	[[autosar::suppress("A5-16-1")]]
	std::int32_t i = 10 + (x >= 0 ? x : 0);
}
