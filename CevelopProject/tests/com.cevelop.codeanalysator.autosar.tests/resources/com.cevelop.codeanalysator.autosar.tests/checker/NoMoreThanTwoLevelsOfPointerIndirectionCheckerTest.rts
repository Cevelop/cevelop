//! Simple declaration using more than two levels of pointer indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t ***pointer { };
}

//! Simple declaration using two levels of pointer indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t **pointer { };
}

//! Simple declaration using more than two levels of pointer indirection in second declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t **first_pointer { }, ***second_pointer { };
}

//! Simple declaration using more than two levels of pointer indirection in nested declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t (*(**pointer)) { };
}

//! Simple declaration using two levels of pointer indirection in nested declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t (*(*pointer)) { };
}

//! Simple declaration using more than two levels of pointer indirection in function declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t (***pointer)() { };
}

//! Simple declaration using two levels of pointer indirection in function declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t (**pointer)() { };
}

//! Simple declaration using more than two levels of pointer indirection in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	void (*func)(std::uint8_t ***pointer) { };
}

//! Simple declaration using two levels of pointer indirection in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	void (*func)(std::uint8_t **pointer) { };
}

//! Simple declaration using two levels of pointer indirection and array in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	void (*func)(std::uint8_t **array[]) { };
}

//! Simple declaration using one level of pointer indirection and array in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	void (*func)(std::uint8_t *array[]) { };
}

//! Simple declaration using two levels of pointer indirection and array in nested parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void Fn() noexcept
{
	void (*func)(std::uint8_t *(**(array[]))) { };
}

//! Simple declaration using two levels of pointer indirection and array
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	std::uint8_t **array[] { };
}

//! Simple declaration using two levels of pointer indirection and one level of indirect type alias indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=5
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptr = std::uint8_t *;
	uint8_ptr **pointer { };
}

//! Simple declaration using one level of pointer indirection and one level of indirect type alias indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptr = std::uint8_t *;
	uint8_ptr *pointer { };
}

//! Simple declaration using one level of pointer indirection and two levels of indirect type alias indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=5
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptrptr = std::uint8_t **;
	uint8_ptrptr *pointer { };
}

//! Simple declaration using one level of pointer indirection and two levels of indirect nested type alias indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=6
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptr = std::uint8_t *;
	using uint8_ptrptr = uint8_ptr *;
	uint8_ptrptr *pointer { };
}

//! Simple declaration using two levels of pointer indirection and one level of indirect type alias indirection in parameter declaration
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=5
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptr = std::uint8_t *;
	void (*func)(uint8_ptr **pointer) { };
}

//! Simple declaration using one level of pointer indirection and one level of indirect type alias indirection in parameter declaration
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
	using uint8_ptr = std::uint8_t *;
	void (*func)(uint8_ptr *pointer) { };
}

//! Function definition using more than two levels of pointer indirection in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=2
//@main.h
#include <cstdint>
void Fn(std::uint8_t ***pointer) noexcept
{
}

//! Function definition using two levels of pointer indirection in parameter declarator
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn(std::uint8_t **pointer) noexcept
{
}

//! Suppressed declaration using more than two levels of pointer indirection
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void Fn() noexcept
{
    [[autosar::suppress("A5-0-3")]]
	std::uint8_t ***pointer { };
}
