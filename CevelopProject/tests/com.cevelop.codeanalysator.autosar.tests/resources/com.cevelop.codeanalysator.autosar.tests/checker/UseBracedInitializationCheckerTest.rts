//! Equals initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x = 12;
}

//! Parentheses initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x(12);
}

//! Equals braced initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x = {12};
}

//! Braced initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x{12};
}

//! Braced and equals initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=4
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x{12}, y = 12;
}

//! Multiple braced initializations
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x{12}, y{12};
}

//! Parentheses initialization exception
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
#include <initializer_list>
class C
{
public:
	C(std::int32_t first, std::int32_t second) {}
	C(std::initializer_list<std::int32_t> list) {}
};
void F()
{
	C c(12, 82);
}

//! Parentheses initialization non-exception
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=9
//@main.h
#include <cstdint>
class C
{
public:
	C(std::int32_t first, std::int32_t second) {}
};
void F()
{
	C c(12, 82);
}

//! Narrowing parentheses initialization non-exception
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
markerLines=9
//@main.h
#include <cstdint>
class C
{
public:
	C(std::int32_t first, std::int8_t second) {}
};
void F()
{
	C c(7.9, 300);
}

//! Auto variable initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
void F()
{
	auto x = 12;
}

//! Suppressed equals initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	[[autosar::suppress("A8-5-2")]]
	std::int32_t x = 12;
}
