//! Equals initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x = 12;
}
//=
#include <cstdint>
void F()
{
	std::int32_t x{12};
}

//! Parantheses initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x(12);
}
//=
#include <cstdint>
void F()
{
	std::int32_t x{12};
}

//! Equals braced initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x = {12};
}
//=
#include <cstdint>
void F()
{
	std::int32_t x{12};
}

//! Braced and equals initialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
void F()
{
	std::int32_t x{12}, y = 12;
}
//=
#include <cstdint>
void F()
{
	std::int32_t x{12}, y{12};
}

//! Constructor call initialization non-exception
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
class C
{
public:
	C(std::int32_t	first, std::int32_t second) {}
};
void F()
{
	C c(12, 82);
}
//=
#include <cstdint>
class C
{
public:
	C(std::int32_t	first, std::int32_t second) {}
};
void F()
{
	C c{12, 82};
}

//! Narrowing constructor call initialization non-exception
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|AUTOSAR_GUIDELINE_ID)
//@main.h
#include <cstdint>
class C
{
public:
	C(std::int32_t first, std::int8_t second) {}
};
void F()
{
	C c(7.9, 300);
}
//=
#include <cstdint>
class C
{
public:
	C(std::int32_t first, std::int8_t second) {}
};
void F()
{
	C c{7.9, 300};
}
