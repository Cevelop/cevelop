//! Switch struct to class
//@main.cpp
struct/*$*/ A/*$*/ {
};
//=
class A {
public:
};

//! Switch struct public to class
//@main.cpp
struct/*$*/ A/*$*/ {
public:
};
//=
class A {
public:
};

//! Switch struct private to class
//@main.cpp
struct/*$*/ A/*$*/ {
private:
};
//=
class A {
};

//! Switch class to struct
//@main.cpp
class/*$*/ A/*$*/ {
};
//=
struct A {
private:
};

//! Switch class public to struct
//@main.cpp
class/*$*/ A/*$*/ {
public:
};
//=
struct A {
};

//! Switch class private to struct
//@main.cpp
class/*$*/ A/*$*/ {
private:
};
//=
struct A {
private:
};

//! Switch struct to class with members
//@main.cpp
struct/*$*/ A/*$*/ {
	void member();
};
//=
class A {
public:
	void member();
};

//! Switch struct to class with inheritance
//@main.cpp
struct A {
};
struct/*$*/ B/*$*/ : A {
};
//=
struct A {
};
class B : public A {
public:
};

//! Switch struct to class with public inheritance
//@main.cpp
struct A {
};
struct/*$*/ B/*$*/ : public A {
};
//=
struct A {
};
class B : public A {
public:
};

//! Switch struct to class with protected inheritance
//@main.cpp
struct A {
};
struct/*$*/ B/*$*/ : protected A {
};
//=
struct A {
};
class B : protected A {
public:
};

//! Switch struct to class with private inheritance
//@main.cpp
struct A {
};
struct/*$*/ B/*$*/ : private A {
};
//=
struct A {
};
class B : A {
public:
};

//! Switch class to struct with inheritance
//@main.cpp
struct A {
};
class/*$*/ B/*$*/ : A {
};
//=
struct A {
};
struct B : private A {
private:
};

//! Switch class to struct with public inheritance
//@main.cpp
struct A {
};
class/*$*/ B/*$*/ : public A {
};
//=
struct A {
};
struct B : A {
private:
};

//! Switch class to struct with protected inheritance
//@main.cpp
struct A {
};
class/*$*/ B/*$*/ : protected A {
};
//=
struct A {
};
struct B : protected A {
private:
};

//! Switch class to struct with private inheritance
//@main.cpp
struct A {
};
class/*$*/ B/*$*/ : private A {
};
//=
struct A {
};
struct B : private A {
private:
};

//! Switch struct to class with mixed inheritance
//@main.cpp
struct A {
};
struct B {
};
struct C {
};
struct D {
};
struct/*$*/ E/*$*/ : private A, protected B, C, public D {
};
//=
struct A {
};
struct B {
};
struct C {
};
struct D {
};
class E : A, protected B, public C, public D {
public:
};

//! Not available on members
//@main.cpp
struct A {
	void /*$*/member();/*$*/
};
//=
struct A {
	void member();
};

//! Available on prolog visibility label
//@main.cpp
struct A {
/*$*/public:/*$*/
};
//=
class A {
public:
};
