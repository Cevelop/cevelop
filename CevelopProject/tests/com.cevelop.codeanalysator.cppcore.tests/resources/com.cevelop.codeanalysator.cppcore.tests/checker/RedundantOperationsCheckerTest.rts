//!RedundantDefaultConstructor
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=3
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }{
		//std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }{
		std::cout << "I was copied";
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		return *this;
	}
	~Named_map() {
		std::cout << "i died";
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!NoRedundantDefaultConstructorBecauseOwner
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }, owy{ }{
		//std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }, owy { rhs.owy }{
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		owy = rhs.owy;
		return *this;
	}
	~Named_map() {
		std::cout << "i died";
	}

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> owy;
};
//!RedundantDefaultConstructorEvenWithInitialization
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() : name { "Best map" }, rep { }{
		//std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }{
		std::cout << "I was copied";
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		return *this;
	}
	~Named_map() {
		std::cout << "i died";
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!NoRedundantDefaultConstructorBecausePrintln
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }, owy { }{
		std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }, owy { rhs.owy }{
		std::cout << "I was copied";
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		owy = rhs.owy;
		return *this;
	}
	~Named_map() {
		std::cout << "i died";
	}

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> owy;
};
//!RedundantDefaultDestructor
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=15
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }{
		std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }{
		std::cout << "I was copied";
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		return *this;
	}
	~Named_map() {
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!RedundantDefaultCopyConstructor
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }{
		std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }{
	}
	Named_map& operator =(const Named_map & rhs) {
		name = rhs.name;
		rep = rhs.rep;
		return *this;
	}
	~Named_map() {
		std::cout << "RIP";
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!RedundantDefaultCopyAssignment
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=10
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }{
		std::cout << "I was created";
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }{
		std::cout << "I was copied";
	}
	void operator =(const Named_map & rhs) {
	}
	~Named_map() {
		std::cout << "RIP";
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!RedundantDefaultOperations
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=3,8,10
//@main.h
struct Named_map {
public:
	Named_map() : name { }, rep { }, owy { }{
	}
	Named_map(const Named_map & rhs) :
			name { rhs.name }, rep { rhs.rep }, owy { rhs.owy }{
	}
	Named_map& operator =(const Named_map & rhs) {
	}
	~Named_map() {
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!NoRedundantDefaultOperationsWhenDefault
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() = default;
	Named_map(const Named_map & rhs) = default;
	Named_map& operator =(const Named_map & rhs) = default;
	~Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> owy;
};
//!RedundantDefaultConstructorBecauseOfCPP
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=3
//@main.h
struct Named_map {
public:
	Named_map() noexcept;
	Named_map(Named_map &&);
	Named_map& operator=(Named_map &&);
	Named_map(const Named_map & rhs);
	Named_map& operator =(const Named_map & rhs);
	~Named_map() noexcept;

private:
	std::string name;
	std::map<int, int> rep;
};
//@main.cpp
#include "main.h"
	Named_map::Named_map() noexcept {
		
	}
	Named_map::Named_map(Named_map &&) = default;
	Named_map& Named_map::operator=(Named_map &&) = default;
	Named_map::Named_map(const Named_map & rhs) = default;
	Named_map& Named_map::operator =(const Named_map & rhs) = default;
	Named_map::~Named_map() noexcept = default;
//!RedundantCopyAssignmentBecauseOfCPP
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=6
//@main.h
struct Named_map {
public:
	Named_map() noexcept;
	Named_map(Named_map &&);
	Named_map& operator=(Named_map &&);
	Named_map(const Named_map & rhs);
	Named_map& operator =(const Named_map & rhs);
	~Named_map() noexcept;

private:
	std::string name;
	std::map<int, int> rep;
};
//@main.cpp
#include "main.h"
	Named_map::Named_map() noexcept = default;
	Named_map::Named_map(Named_map &&) = default;
	Named_map& Named_map::operator=(Named_map &&) = default;
	Named_map::Named_map(const Named_map & rhs){
	}
	Named_map& Named_map::operator =(const Named_map & rhs) = default;
	Named_map::~Named_map() noexcept = default;
//!RedundantCopyAssignmentBecauseOfCPP2
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=7
//@main.h
struct Named_map {
public:
	Named_map() noexcept;
	Named_map(Named_map &&);
	Named_map& operator=(Named_map &&);
	Named_map(const Named_map & rhs);
	Named_map& operator =(const Named_map & rhs);
	~Named_map() noexcept;

private:
	std::string name;
	std::map<int, int> rep;
};
//@main.cpp
#include "main.h"
	Named_map::Named_map() noexcept = default;
	Named_map::Named_map(Named_map &&) = default;
	Named_map& Named_map::operator=(Named_map &&) = default;
	Named_map::Named_map(const Named_map & rhs) = default;
	Named_map& Named_map::operator =(const Named_map & rhs){
	}
	Named_map::~Named_map() noexcept = default;
//!RedundantDestructorBecauseOfCPP
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=8
//@main.h
struct Named_map {
public:
	Named_map() noexcept;
	Named_map(Named_map &&);
	Named_map& operator=(Named_map &&);
	Named_map(const Named_map & rhs);
	Named_map& operator =(const Named_map & rhs);
	~Named_map() noexcept;

private:
	std::string name;
	std::map<int, int> rep;
};
//@main.cpp
#include "main.h"
	Named_map::Named_map() noexcept = default;
	Named_map::Named_map(Named_map &&) = default;
	Named_map& Named_map::operator=(Named_map &&) = default;
	Named_map::Named_map(const Named_map & rhs) = default;
	Named_map& Named_map::operator =(const Named_map & rhs) = default;
	Named_map::~Named_map() noexcept{
	}
//!NoRedundantOperationsBecauseOfCPP
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	Named_map() noexcept;
	Named_map(Named_map &&);
	Named_map& operator=(Named_map &&);
	Named_map(const Named_map & rhs);
	Named_map& operator =(const Named_map & rhs);
	~Named_map() noexcept;

private:
	std::string name;
	std::map<int, int> rep;
};
//@main.cpp
#include "main.h"
	Named_map::Named_map() noexcept {
		std::cout << "I was created";
	}
	Named_map::Named_map(Named_map &&) = default;
	Named_map& Named_map::operator=(Named_map &&) = default;
	Named_map::Named_map(const Named_map & rhs) = default;
	Named_map& Named_map::operator =(const Named_map & rhs) = default;
	Named_map::~Named_map() noexcept = default;
//!NoRedundantDefaultConstructorBecauseOfNonEmptyInitializerListV1
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct customIntVector2d {
public:
	customIntVector2d() : x {42}, y {} {

	}

private:
	int x;
	int y;
};
//!NoRedundantDefaultConstructorBecauseOfNonEmptyInitializerListV2
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct customIntVector2d {
public:
	customIntVector2d() : x (42), y () {

	}

private:
	int x;
	int y;
};
//!NoRedundantDefaultConstructorBecauseOfNonEmptyInitializerListV3
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct customIntVector2dWithProperty {
public:
	customIntVector2dWithProperty() : x {}, y {}, property("unknown", 0) {

	}

private:
	int x;
	int y;
	Property property;
};
//!RedundantDefaultConstructorBecauseOfEmptyInitializerList
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
markerLines=3
//@main.h
struct customIntVector2d {
public:
	customIntVector2d() : x {}, y () {

	}

private:
	int x;
	int y;
};
//!IgnoreRedundantDefaultConstructorBecauseOfAttribute
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	[[gsl::suppress("C.20")]]
	Named_map() : name { }, rep { }{
	}

private:
	std::string name;
	std::map<int, int> rep;
};
//!IgnoreRedundantDefaultConstructorBecauseOfAttributeInline
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@main.h
struct Named_map {
public:
	[[gsl::suppress("C.20")]]
	inline Named_map();

private:
	std::string name;
	std::map<int, int> rep;
};

inline Named_map::Named_map() : name { }, rep { }{
}
//!IgnoreRedundantDefaultConstructorBecauseOfAttributeCPP
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@Named_map.h
struct Named_map {
public:
	[[gsl::suppress("C.20")]]
	Named_map();

private:
	std::string name;
	std::map<int, int> rep;
};
//@Named_map.cpp
Named_map::Named_map() : name { }, rep { }{
}
//!RedundantDefCtorBecRuleC45
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@Named_map.h
struct Named_map {
public:
	Named_map() noexcept : name { 20 }, rep { 30 } { }

private:
	std::string name;
	std::map<int, int> rep;
};
//!IgnoreCheckerBecNULL
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@A.h
struct A {
	A() : a {NULL} {}
private:
	int *a;
};
//!IgnoreCheckerBecnullptr
//@.config
setPreferencesEval=(GUIDELINE_SETTING_ID|CPPCORE_GUIDELINE_ID)
//@A.h
struct A {
	A() : a {nullptr} {}
private:
	int *a;
};