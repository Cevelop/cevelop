//!Reference parameter passed to constructor via non-const reference (initializer-list)
//@test.cpp
struct S {
    S(int& x) { x += 1; }
};
void f(int& x) {
    const S s{x};
}
//!Reference parameter passed to constructor via const reference (initializer-list)
//@.config
markerLines=4
//@test.cpp
struct S {
    S(int const& x) { }
};
void f(int& x) {
    const S s{x};
}
//!Reference parameter passed to constructor via non-const reference (simple type constructor expression)
//@test.cpp
struct S {
    S(int& x) { x += 1; }
};
void f(int& x) {
	S{x};
}
//!Reference parameter passed to constructor via const reference (simple type constructor expression)
//@.config
markerLines=4
//@test.cpp
struct S {
    S(int const& x) { }
};
void f(int& x) {
	S{x};
}
//!Reference parameter passed to constructor via non-const reference (constructor initializer)
//@test.cpp
struct S {
    S(int& x) { x += 1; }
};
void f(int& x) {
    const S s(x);
}
//!Reference parameter passed to constructor via const reference (constructor initializer)
//@.config
markerLines=4
//@test.cpp
struct S {
    S(int const& x) { }
};
void f(int& x) {
    const S s(x);
}
//!Reference parameter passed to constructor via non-const reference (function call expression)
//@test.cpp
struct S {
    S(int& x) { x += 1; }
};
void f(int& x) {
    (void)S(x);
}
//!Reference parameter passed to constructor via const reference (function call expression)
//@.config
markerLines=4
//@test.cpp
struct S {
    S(int const& x) { }
};
void f(int& x) {
    (void)S(x);
}
//!Pointer parameter pointee passed to constructor via non-const reference (initializer list)
//@test.cpp
struct S {
	S(int& x) { x += 1; }
};
void f(int * const x) {
    const S s{*x};
}
//!Pointer parameter pointee passed to constructor via const reference (initializer list)
//@.config
markerLines=4
//@test.cpp
struct S {
	S(int const& x) { }
};
void f(int * const x) {
    const S s{*x};
}