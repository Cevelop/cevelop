//!InitializationWithLiteral
//@main.cpp
int main() {
	auto constexpr var = 0;
}

//!InitializationWithRegularConstexprFunction
//@main.cpp
constexpr int func() {
	return 42;
}

int main() {
	auto constexpr var = func();
}

//!InitializationWithAutoConstexprFunction
//@main.cpp
constexpr auto fun() {
	return 42;
}

int main() {
	auto constexpr var = func()
}

//!InitializationWithTypeTemplateConstexprFunction
//@main.cpp
template<typename T>
constexpr T fun() {
	return T(42);
}

int main() {
	auto constexpr var = func<int>();
}

//!InitializationWithValueTemplateConstexprFunction
//@main.cpp
template<int N>
constexpr int fun() {
	return N;
}

int main() {
	auto constexpr var = func<42>();
}

//!InitializationWithTypeTemplateAutoConstexprFunction
//@main.cpp
template<typename T>
constexpr auto fun() {
	return T(42);
}

int main() {
	auto constexpr var = func<int>();
}

//!InitializationWithValueTemplateConstexprAutoFunction
//@main.cpp
template<int N>
constexpr auto fun() {
	return N;
}

int main() {
	auto constexpr var = func<42>();
}

//!InitializationWithAutoVariableTemplate
//@main.cpp
template<typename T>
auto constexpr glob = T(3.14159265);

int main() {
	auto constexpr var = glob<int>;
}

//!InitializationWithValueVariableTemplate
//@main.cpp
template<int N>
auto constexpr glob = N;

int main() {
	auto constexpr var = glob<42>;
}

//!InitializationWithCalculatedVariableTemplate
//@main.cpp
auto constexpr func(int n) {
	return n * 21;
}

template<int N>
auto constexpr glob = func(N);

int main() {
	auto constexpr var = glob<2>;
}