//!ReadOnlyAccessToMembersExpectsMarker
//@.config
markerLines=6
//@main.cpp
struct s {
	bool member { };
};

int main() {
	s inst { };

	if (inst.member) {
	}
}

//!ModificationOfNonConstMemberWithUnaryExpression
//@main.cpp
struct s {
	int member { };
};

int main() {
	s inst { };
	inst.member++;
}

//!ModificationOfNonConstMemberWithBinaryExpression
//@main.cpp
struct s {
	int member { };
};

int main() {
	s inst { };
	inst.member += 1;
}

//!IndirectAccessToNonConstMemberOfMember
//@.config
markerLines=10
//@main.cpp
struct r {
	int rmember { };
};

struct s {
	r member { };
};

int main() {
	s inst { };
	(void)inst.member.rmember;
}

//!IndirectModificationOfNonConstMemberOfMember
//@main.cpp
struct r {
	int rmember { };
};

struct s {
	r member { };
};

int main() {
	s inst { };
	inst.member.rmember = 1;
}

//!IndirectCallToNonConstMemberFunctionOfMember
//@main.cpp
struct r {
	void do_stuff() { }
};

struct s {
	r member { };
};

int main() {
	s inst { };
	inst.member.do_stuff();
}

//!IndirectAccessToNonConstMemberOfPointerMember
//@.config
markerLines=10
//@main.cpp
struct r {
	int rmember { };
};

struct s {
	r * member { };
};

int main() {
	s inst { };
	(void)inst.member->rmember;
}

//!IndirectModificationOfNonConstMemberOfPointerMember
//@main.cpp
struct r {
	int rmember { };
};

struct s {
	r * member { };
};

int main() {
	s inst { };
	inst.member->rmember = 10;
}

//!IndirectCallToNonConstMemberFunctionOfPointerMember
//@main.cpp
struct r {
	void do_stuff() { }
};

struct s {
	r * member { };
};

int main() {
	s inst { };
	inst.member->do_stuff();
}

//!MemberIsPassedAsReferenceToNonConst
//@main.cpp
struct Object {
	bool n { };
};

void toggle(bool & flag) {
	flag = !flag;
}

int main() {
	Object obj{};
	toggle(obj.n);
}