//!NoexceptOwnDefaultCtorDeclaration
//@.config
markerLines=2
//@main.h
struct A {
	A();
};
//!NoexceptDefaultedCtorDeclaration
//@.config
markerLines=2
//@main.h
struct A {
	A() = default;
};
//!NoexceptDefaultCtorImplementation
//@.config
markerLines=2
//@main.h
struct A {
	A(){
		doStuff();
	}
};
//!OwnDefaultCtorWithNoexcept
//@main.h
struct A {
	A() noexcept;
};
//!DefaultedCtorWithNoexcept
//@main.h
struct A {
	A() noexcept = default;
};
//!OwnDefaultCtorWithNoexceptImplementation
//@main.h
struct A {
	A() noexcept{
		doStuff();
	}
};
//!DefaultedCtorWithoutNoexceptIgnoresOtherCtors
//@.config
markerLines=2
//@main.h
struct A {
	A()=default;
	explicit A(int x);
	
	A(std::string s);
};
//!OwnDefaultCtorWithoutNoexceptIgnoresOtherCtors
//@.config
markerLines=2
//@main.h
struct A {
	A(){
		doStuff();
	}
	explicit A(int x);
	
	A(std::string s);
};
//!DefaultedCtorWithoutNoexceptButHasCppFile
//@.config
markerLines=2
//@A.h
struct A {
	A();
};
//@A.cpp
#include "A.h"
A::A() = default;
//!InlineInHeaderCtor
//@.config
markerLines=2
//@A.h
struct A {
	inline A();

private:
	int a;
	std::string s;
};

inline A::A()
	: a { 42 }, s{ "42" } { }
//!InlineInHeaderCtorInitWithNormalBrackets
//@.config
markerLines=2
//@A.h
struct A {
	inline A();

private:
	int a;
	std::string s;
};

inline A::A() :
		a(42), s ("42") {
}
//!CtorInitWithNormalBracketsInCPP
//@.config
markerLines=2
//@A.h
struct A {
	inline A();

private:
	int a;
	std::string s;
};
//@A.cpp
#include "A.h"
inline A::A() :
		a(42), s ("42") {
}
//!IgnoreInlineInHeaderCtorCheckerBecauseOfAttributeInline
//@A.h
struct A {
	[[gsl::suppress("Rc-default00")]]
	inline A();

private:
	int a;
	std::string s;
};

inline A::A()
	: a { 42 }, s{ "42" } { }
//!IgnoreInlineInHeaderCtorCheckerBecauseOfAttribute
//@A.h
struct A {
	[[gsl::suppress("Rc-default00")]]
	inline A()
		: a { 42 }, s{ "42" } { }

private:
	int a;
	std::string s;
};
//!IgnoreInlineInHeaderCtorCheckerBecauseOfAttributeCPP
//@A.h
struct A {
	[[gsl::suppress("Rc-default00")]]
	A();

private:
	int a;
	std::string s;
};
//@A.cpp
#include "A.h"
A::A()
	: a { 42 }, s{ "42" } { }
//!DefaultedCtorWithoutNoexceptMultipleMemVarDefinition
//@.config
markerLines=2
//@main.h
struct A {
	A() : a { }, b{ } { }
private:
	int a, b;
};