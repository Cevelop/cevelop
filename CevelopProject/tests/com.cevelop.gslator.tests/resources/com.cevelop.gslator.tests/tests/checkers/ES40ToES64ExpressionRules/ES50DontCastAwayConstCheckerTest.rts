//!ConstCastUnneded
//@.config
markerLines=4
//@main.h
void foo() {
	int i = 20;
	int * ic = &i;
	int * inew = const_cast<int *>(ic);
	*inew = 10;
}
//!ConstCastFunctionIsConst
//@.config
markerLines=8,9
//@main.h
class CacheClass {
public:
	void set(int x) {};
};
class constFuncExample {
public:
	int getVal() const {
		((CacheClass&)cache).set(val);
		const_cast<CacheClass&>(cache).set(val);
		return val;
	}
private:
	int val = 0;
	CacheClass cache;
};
//!ConstCastFunctionIsConstMultipleFiles
//@.config
markerLines=4,5
//@main.h
class CacheClass {
public:
	void set(int x) {};
};
class constFuncExample {
public:
	int getVal() const;
private:
	int val = 0;
	CacheClass cache;
};
//@main.cpp
#include "main.h"

int constFuncExample::getVal() const {
	((CacheClass&)cache).set(val);
	const_cast<CacheClass&>(cache).set(val);
	return val;
}
//!ConstCastVarIsConst
//@.config
markerLines=4,5
//@main.h
void foo() {
	int i = 20;
	int const * ic = &i;
	int * inewc = (int *)ic;
	int * inew = const_cast<int *>(ic);
	*inewc = 10;
	*inew = 10;
}
//!ConstCastVarIsConstMultipleFiles
//@.config
markerLines=4,5
//@main.h
class constVarExample {
private:
	int theVar = 10;
	void someFunc();
public:
	const int * theConstVar = &theVar;
};
//@main.cpp
#include "main.h"

void constVarExample::someFunc() {
	*((int *)theConstVar)+=10;
	*(const_cast<int *>(theConstVar))+=10;
}
//!testSameNameBug
//@.config
markerLines=8
//@main.h
class log {
	static int lastAccessTimeStamp = 0;
};

class blubb {
	int getVal() const {
		long tstmp = (long) log::lastAccessTimeStamp;
		long tstmp = (long) lastAccessTimeStamp;
		return 0;
	}
	int lastAccessTimeStamp = 0;
};
//!IgnoreAttributes
//@main.h
void foo() {
	int i = 20;
	int const * ic = &i;
	[[gsl::suppress("Res-casts-const")]] int * inew1 = const_cast<int *>(ic);
	[[gsl::suppress("type")]] int * inew2 = const_cast<int *>(ic);
	[[gsl::suppress("type.3")]] int * inew3 = const_cast<int *>(ic);
	[[gsl::suppress("Res-casts-const")]] int * inewc1 = (int *)ic;
	[[gsl::suppress("type")]] int * inewc2 = (int *)ic;
	[[gsl::suppress("type.3")]] int * inewc3 = (int *)ic;
	*inew1 = 10;
	*inew2 = 10;
	*inew3 = 10;
	*inewc1 = 10;
	*inewc2 = 10;
	*inewc3 = 10;
}