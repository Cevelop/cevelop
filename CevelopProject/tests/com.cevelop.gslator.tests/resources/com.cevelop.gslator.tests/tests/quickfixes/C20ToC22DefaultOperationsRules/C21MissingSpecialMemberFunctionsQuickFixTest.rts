//!ConstructorMissing
//@main.h
struct Named_map {
public:
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map() noexcept =default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!ConstructorMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map() noexcept =default;

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//!CopyAssignmentMissing
//@main.h
struct Named_map {
public:
	Named_map() = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map() = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!CopyAssignmentMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map();

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map();

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//!CopyConstructorMissing
//@main.h
struct Named_map {
public:
	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map(const Named_map& rhs) = default;

	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!CopyConstructorMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map(const Named_map& rhs) = default;

	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//!MoveAssignmentMissing
//@main.h
struct Named_map {
public:
	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map& operator=(Named_map&& rhs) noexcept =default;

	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!MoveAssignmentMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map& operator=(Named_map&& rhs) noexcept =default;

	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//!MoveConstructorMissing
//@main.h
struct Named_map {
public:
	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map(Named_map&& rhs) noexcept =default;

	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	~Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!MoveConstructorMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map(Named_map&& rhs) noexcept =default;

	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//!DestructorMissing
//@main.h
struct Named_map {
public:
	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	~Named_map() noexcept =default;

	Named_map() = default;

	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) = default;

	Named_map(Named_map&& rhs) = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!DestructorMissingAllDefined
//@main.h
struct Named_map {
public:
	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	~Named_map() noexcept =default;

	Named_map();

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);
private:
	std::string name;
	std::map<int, int> rep;
};
//!OnlyConstructor
//@main.h
struct Named_map {
public:
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
public:
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) noexcept =default;

	Named_map(Named_map&& rhs) noexcept =default;

	~Named_map() noexcept =default;

	Named_map() = default;
private:
	std::string name;
	std::map<int, int> rep;
};
//!OnlyConstructorWithoutVisibilityLabelAndShouldntBe
//@main.h
struct Named_map {
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Named_map {
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) noexcept =default;

	Named_map(Named_map&& rhs) noexcept =default;

	~Named_map() noexcept =default;

	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};
//!OnlyConstructorWithoutVisibilityLabelAndShouldBe
//@main.h
class Named_map {
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};
//=
class Named_map {
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;

public:
	Named_map& operator=(const Named_map& rhs) = default;

	Named_map(const Named_map& rhs) = default;

	Named_map& operator=(Named_map&& rhs) noexcept =default;

	Named_map(Named_map&& rhs) noexcept =default;

	~Named_map() noexcept =default;
};
//!SetAttributeOnlyConstructorWithoutVisibilityLabelAndShouldBe
//@.config
setIgnoreAttribute=true
//@Named_map.h
class Named_map {
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};
//=
class [[gsl::suppress("Rc-five")]] Named_map {
	Named_map() = default;

private:
	std::string name;
	std::map<int, int> rep;
};

//!Constructor Missing All Defined with Inheritance
//@main.h
struct Map {
};

struct Named_map : Map {
	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Map {
};

struct Named_map : Map {
	Named_map() noexcept =default;

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};

//!Missing All Defined with Inheritance
//@main.h
struct Map {
};

struct Named_map : Map {
	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Map {
};

struct Named_map : Map {
	Named_map() noexcept =default;

	Named_map& operator=(const Named_map& rhs) =default;

	Named_map(const Named_map& rhs) =default;

	Named_map& operator=(Named_map&& rhs) =default;

	Named_map(Named_map&& rhs) =default;

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};


//!Constructor Missing All Defined with multiple Inheritance
//@main.h
struct Map {
};

struct MyMap {
};

struct Named_map : Map, MyMap {
	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};
//=
struct Map {
};

struct MyMap {
};

struct Named_map : Map, MyMap {
	Named_map() noexcept =default;

	Named_map& operator=(const Named_map& rhs);

	Named_map(const Named_map& rhs);

	Named_map& operator=(Named_map&& rhs);

	Named_map(Named_map&& rhs);

	~Named_map();
private:
	std::string name;
	std::map<int, int> rep;
};