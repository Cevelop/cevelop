//!CopyAssignmentDeclarationWithNonConstParameter
//@main.h
struct Named_map {

public:
	Named_map& operator=(Named_map& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//=
struct Named_map {

public:
	Named_map& operator=(const Named_map& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!CopyAssignmentDefinitionWithNonConstParameter
//@main.h
struct Named_map {

public:
	Named_map& operator=(Named_map& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//=
struct Named_map {

public:
	Named_map& operator=(const Named_map& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!SetAttributeCopyAssignmentDeclarationWithNonConstParameter
//@.config
setIgnoreAttribute=true
//@main.h
struct Named_map {

public:
	Named_map& operator=(Named_map& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//=
struct Named_map {

public:
	Named_map& operator=([[gsl::suppress("Rc-copy-assignment")]] Named_map& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};