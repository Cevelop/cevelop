//!ConstructorRefTest4parameterDeclaration1
//@.config
containsCorrectCopyConstr=true
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(const X &x);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(const X &x) { }
//!ConstructorRefTest4parameterDeclaration2
//@.config
containsCorrectCopyConstr=true
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(X &x);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(X &x) { }
//!ConstructorRefTest4parameterDeclaration3
//@.config
containsCorrectCopyConstr=true
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(volatile X &x);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(volatile X &x) { }

//!ConstructorRefTest4parameterDeclaration4
//@.config
containsCorrectCopyConstr=true
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(const X &x, int bar = 7);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(const X &x, int bar) { }

//!ConstructorRefTest4parameterDeclaration5Incorrect1
//@.config
containsCorrectCopyConstr=false
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(X x);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(X x) { }

//!ConstructorRefTest4parameterDeclaration6Incorrect2
//@.config
containsCorrectCopyConstr=false
//@A.cpp
#include "X.h"
void foo(X x) {
}
int main() {
  X x;
  foo(x);
  return 0;
}
//@X.h
class X {
public:
  X();
  X(const X &x, int bar = 7, int boo);
};
//@X.cpp
#include "X.h"
X::X() { }
X::X(const X &x, int bar, int boo) { }