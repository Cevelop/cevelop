//!CharPointerString
//@.config
markerLines=2
//@main.cpp
int main() {
	const char *str = "Hello, World!";
}

//!CharArrayString
//@.config
markerLines=2
//@main.cpp
int main() {
	char str[] = "Hello, World!";
}

//!MultipleDeclarators1
//@.config
markerLines=2
//@main.cpp
int main() {
	const char a = 'a', *b = "Hello, World!";
}

//!MultipleDeclarators2
//@.config
markerLines=2
//@main.cpp
int main() {
	const char a = 'a', *b{"Hello, World!"};
}

//!MultipleDeclarators3
//@.config
markerLines=2
//@main.cpp
int main() {
	const char a = 'a', *b("Hello, World!");
}

//!MultipleDeclarators4
//@.config
markerLines=2
//@main.cpp
int main() {
	const char a = 'a', *b = {"Hello, World!"};
}

//!IgnoresPointerToSingleChar
//@main.cpp
int main() {
	char c = 'c';
	char *ptr = &c;
}

//!IgnoresCharArray
//@main.cpp
int main() {
	char arr[] = {'a', 'b', 'c'};
}

//!WCHARString
//@.config
markerLines=2
//@main.cpp
int main() {
	wchar_t w_str[] = L"Hello";
}

//!StrdupInitializer1
//@.config
markerLines=2
//@main.cpp
int main() {
	char *str = strdup("mystr");
}

//!StrdupInitializer2
//@.config
markerLines=2
//@main.cpp
int main() {
	char *str{strdup("mystr")};
}

//!StrdupInitializer3
//@.config
markerLines=2
//@main.cpp
int main() {
	char *str(strdup("mystr"));
}

//!StrdupInitializer4
//@.config
markerLines=2
//@main.cpp
int main() {
	char *str = {strdup("mystr")};
}

//!IgnoresCFiles
//@main.c
#include <stdio.h>
void printTest() {
	const char *str = "test";
	char str[] = "test";
	printf("%s", str);
}

//!IgnoresCharPointerInMacro
//@mymacros.h
#ifndef MYMACROS_H_
#define MYMACROS_H_

#define PRINT()  {					\
	const char *str = "Hello";		\
    std::cout << str << std::endl; 	\
}

#endif
//@main.cpp
#include "mymacros.h"

int main() {
	PRINT()
}

//!BraceInitialization
//@.config
markerLines=2
//@main.cpp
int main() {
	const char *str{"hello"};
}

//!ConstructorInitialization
//@.config
markerLines=2
//@main.cpp
int main() {
	const char *str("hello");
}

//!AggregateInitialization
//@.config
markerLines=2
//@main.cpp
int main() {
	const char *str = { "hello" };
}
