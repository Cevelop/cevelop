//!NormalMoveAssignmentDeclaration
//@main.h
struct Named_map {

public:
	Named_map& operator=(Named_map&& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!NormalMoveAssignmentDefinition
//@main.h
struct Named_map {

public:
	Named_map& operator=(Named_map&& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDeclarationWithConstRefReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	const Named_map& operator=(Named_map&& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDefinitionWithConstRefReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	const Named_map& operator=(Named_map&& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDeclarationWithNormalReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	Named_map operator=(Named_map&& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDefinitionWithNormalReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	Named_map operator=(Named_map&& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDeclarationWithConstReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	const Named_map operator=(Named_map&& rhs) const;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!MoveAssignmentDefinitionWithConstReturn
//@.config
markerLines=4
//@main.h
struct Named_map {

public:
	const Named_map operator=(Named_map&& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};
//!IgnoreBecAttrMoveAssignmentDefinitionWithConstReturn
//@main.h
struct Named_map {

public:
	[[gsl::suppress("Rc-move-assignment")]]
	const Named_map operator=(Named_map&& rhs) = default;

private:
	std::string name;
	std::map<int, int> rep;
	gsl::owner<int *> io;
	gsl::owner<int *> oeee;

};